plugins {
    id 'java'
    id 'jacoco' // code coverage
}

repositories {
    maven {
        url "https://www.hec.usace.army.mil/nexus/repository/maven-public/"
    }
    mavenCentral()
}

test {
    useJUnitPlatform()
    jvmArgs = ["-Djava.io.tmpdir=c:/temp"]
    finalizedBy jacocoTestReport
}

build {finalizedBy javadoc }


task runApp(type: JavaExec) {
    main = 'hec.ensemble.EnsembleUtility'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-Djava.io.tmpdir=c:/temp"]
    args = ["c:/temp/hefs_cache", "30","1","src/test/resources/database/ResSim.db"]
}

task runEnsembleMetrics(type: JavaExec) {
    main = 'hec.ensemble.EnsembleUtility'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-Djava.io.tmpdir=c:/temp"]
    args = ["c:/temp/hefs_cache", "100","10","C:/temp/ResSim.db"]
}

jacocoTestReport {
    reports{
        xml.enabled true
    }
}

// setup for performance tests
sourceSets{
    perfTest {
        java {
            srcDir "$projectDir/src/perf/java"
            
            compileClasspath += sourceSets.main.output + sourceSets.test.output
            runtimeClasspath += output + sourceSets.main.output + sourceSets.test.output
        }
        resources.srcDir "$projectDir/src/perf/resource"
    }
    
}

configurations {
    perfTestCompile.extendsFrom testCompile
    perfTestImplementation.extendsFrom testImplementation
    perfTestRuntime.extendsFrom testRuntime
}

dependencies {
    runtimeOnly 'org.xerial:sqlite-jdbc:3.30.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.0'
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:1.4.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.4.0"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.4.0"

    perfTestImplementation 'org.junit.jupiter:junit-jupiter:5.4.0'
    perfTestRuntimeOnly "org.junit.platform:junit-platform-launcher:1.4.0"
    perfTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.4.0"
    perfTestRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.4.0"
    
}

task perfTest(type: Test){
    useJUnitPlatform()
    testClassesDirs = sourceSets.perfTest.output.classesDirs
    classpath += sourceSets.perfTest.runtimeClasspath
    outputs.upToDateWhen {false}
    mustRunAfter test
}
