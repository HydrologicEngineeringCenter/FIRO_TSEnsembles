plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
}



repositories {
    mavenCentral()
    maven {
        url = 'https://www.hec.usace.army.mil/nexus/repository/maven-public'
    }
}

dependencies {
    implementation project(":FIRO_TSEnsembles")
    implementation project(":ensemble-dss")
    implementation ('mil.army.usace.hec:hec-monolith:3.3.23') {
        transitive = false
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    useJUnitPlatform()
}


application {
    mainClassName = 'hec.ensembleview.EnsembleViewer'
}

jar {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    manifest {
        attributes 'Main-Class' : 'hec.ensembleview.EnsembleViewer'
    }
}

def getGitTag() {
    def stdout = new ByteArrayOutputStream()

    try {
        exec {
            commandLine 'git', 'tag', '--list', '--contains', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim().split('\n')
    } catch (Exception e) {
        return null
    }
}

publishing {
    def gitTags = getGitTag()

    gitTags.each { gitTag ->
        if (gitTag.contains("ev-")) {
            def verNum = gitTag.trim().split('-')
            version = verNum[1]
        }
    }
    if(version.toString().contains("unspecified")) {
        version = "main-SNAPSHOT"
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'mil.army.usace.hec'
            artifactId = 'ensemble-view'
        }
    }
    repositories {
        maven {
            name = "hecNexus"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
            def releasesRepoUrl = "https://www.hec.usace.army.mil/nexus/repository/maven-releases/"
            def snapshotsRepoUrl = "https://www.hec.usace.army.mil/nexus/repository/maven-snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

publish.dependsOn(build)