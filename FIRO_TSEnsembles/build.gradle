import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

dependencies {
    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.5.0.202303070854-r'
    implementation 'org.apache.directory.studio:org.apache.commons.lang:2.6'
    runtimeOnly 'org.xerial:sqlite-jdbc:3.40.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.9.2'
    implementation 'org.jdom:jdom:1.1'
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'javax.measure:unit-api:2.1.3'
    implementation 'tech.units:indriya:2.2'
    implementation 'systems.uom:systems-common:2.1'
}

test {
     useJUnitPlatform()
    if (OperatingSystem.current().isWindows()) {
        jvmArgs = ["-Djava.io.tmpdir=c:/temp"]
     }
}

jar {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

def getGitTag() {
    def stdout = new ByteArrayOutputStream()

    try {
        exec {
            commandLine 'git', 'tag', '--list', '--contains', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim().split('\n')
    } catch (Exception e) {
        return null
    }
}

publishing {
    def gitTags = getGitTag()

    gitTags.each { gitTag ->
        if (gitTag.contains("ts-")) {
            def verNum = gitTag.trim().split('-')
            version = verNum[1]
        }
    }
    if(version.toString().contains("unspecified")) {
        version = "SNAPSHOT"
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'mil.army.usace.hec'
            artifactId = "ts-ensembles"
        }
    }
    repositories {
        maven {
            name = "hecNexus"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
            def releasesRepoUrl = "https://www.hec.usace.army.mil/nexus/repository/maven-releases/"
            def snapshotsRepoUrl = "https://www.hec.usace.army.mil/nexus/repository/maven-snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

publish.dependsOn(build)
build {finalizedBy javadoc }

